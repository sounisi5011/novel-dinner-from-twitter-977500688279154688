ul.social-buttons
  //- Twitter
  //- https://dev.twitter.com/web/tweet-button
  li
    a(
      href=(tweetContentParameters => {
        /**
         * @see https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
         */
        const encodeRFC3986URIComponent = str => (
          encodeURIComponent(str)
            .replace(
              /[!'()*]/g,
              c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`
            )
        );
        /*
         * TODO: Fix URL regex
         */
        const urlRegExp = /^.+$/;
        const twitterUserNameRegExp = /^[a-zA-Z0-9_]{1,15}$/;
        const twitterHashtagRegExp = /^.+$/;

        const params = [...Object.entries(tweetContentParameters)]
          .map(([key, value]) => {
            if (key === 'text') {
              if (!value) {
                return null;
              }
            } else if (key === 'url') {
              if (!urlRegExp.test(value)) {
                return null;
              }
            } else if (/^(?:hashtags|related)$/.test(key)) {
              value = (Array.isArray(value) ? value : String(value).split(','))
                .filter(value => (
                  key === 'hashtags' && twitterHashtagRegExp.test(value) ||
                  key === 'related' && twitterUserNameRegExp.test(value) ||
                  false
                ))
                .join(',');
              if (!value) {
                return null;
              }
            } else if (key === 'via') {
              if (!twitterUserNameRegExp.test(value)) {
                return null;
              }
            } else {
              return null;
            }
            return encodeRFC3986URIComponent(key) + '=' + encodeRFC3986URIComponent(value);
          })
          .filter(Boolean)
          .join('&');
        return 'https://twitter.com/share' + (params ? ('?' + params) : '');
      })({
        text: title,
        url: baseUrl,
        hashtags: [],
        via: (
          Array.isArray(twitterAccountList) ?
          (twitterAccountList.map(account => account.name)[0] || '') :
          (twitterAccountList ? twitterAccountList.name : '')
        ),
        related: [],
      })
      class="default-button-style twitter-share-button"
    ) ツイート

  //- Google+
  //- https://developers.google.com/+/web/share/?hl=ja
  li
    a(
      href=(url => {
        /**
         * @see https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
         */
        const encodeRFC3986URIComponent = str => (
          encodeURIComponent(str)
            .replace(
              /[!'()*]/g,
              c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`
            )
        );
        return 'https://plus.google.com/share?url=' + encodeRFC3986URIComponent(url);
      })(baseUrl)
      class="default-button-style g-plus"
      data-action="share"
      data-annotation="none"
    )
      img(
        src="https://www.gstatic.com/images/icons/gplus-16.png"
        srcset=(
          [
            [64, 'https://www.gstatic.com/images/icons/gplus-64.png'],
            [32, 'https://www.gstatic.com/images/icons/gplus-32.png'],
            [16, 'https://www.gstatic.com/images/icons/gplus-16.png'],
          ]
            .map(([width, url]) => `${url} ${width}w`)
            .join(',')
        )
        sizes="16px"
        width="16px"
        height="16px"
        alt="Google+"
      )
      | #{s}で共有
  - includeResources.push({src: 'https://apis.google.com/js/platform.js', async: true});

  //- Pocket
  //- https://getpocket.com/publisher/button
  li
    a(
      href=(pocketParameters => {
        /**
         * @see https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
         */
        const encodeRFC3986URIComponent = str => (
          encodeURIComponent(str)
            .replace(
              /[!'()*]/g,
              c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`
            )
        );
        /*
         * TODO: Fix URL regex
         */
        const urlRegExp = /^.+$/;

        const params = [...Object.entries(pocketParameters)]
          .map(([key, value]) => {
            if (key === 'url') {
              if (!urlRegExp.test(value)) {
                return null;
              }
            } else if (key === 'title') {
              if (!value) {
                return null;
              }
            } else {
              return null;
            }
            return encodeRFC3986URIComponent(key) + '=' + encodeRFC3986URIComponent(value);
          })
          .filter(Boolean)
          .join('&');
        return 'https://getpocket.com/save' + (params ? ('?' + params) : '');
      })({
        url: baseUrl,
        title: title,
      })
      data-pocket-label="pocket"
      data-pocket-count="none"
      class="default-button-style pocket-btn"
      data-lang="ja"
    ) Pocketに追加
  - includeResources.push({src: 'https://widgets.getpocket.com/v1/j/btn.js?v=1', id: 'pocket-btn-js', async: true});

  //- はてなブックマーク
  //- http://b.hatena.ne.jp/guide/bbutton
  li
    a(
      href=(url => {
        const match = url.match(/^http(s)?:\/\/([\s\S]*)$/);
        return 'http://b.hatena.ne.jp/entry/' + (
          match ? (match[1] ? 's/' : '') + match[2] : url
        );
      })(baseUrl)
      class="default-button-style hatena-bookmark-button"
      data-hatena-bookmark-layout="basic-label"
      data-hatena-bookmark-lang="ja"
      title="このページをはてなブックマークに追加"
    )
      img(src="https://b.st-hatena.com/images/entry-button/button-only@2x.png" alt="はてブで" width="20" height="20" style="border: none;")
      | ブックマーク
  - includeResources.push({src: 'https://b.st-hatena.com/js/bookmark_button.js', async: true});

  //- Tumblr
  //- https://www.tumblr.com/docs/ja/share_button
  //- TODO: デプロイ後、ちゃんと機能するかテストする
  li
    a(
      class="default-button-style tumblr-share-button"
      href=(parameters => {
        /**
         * @see https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
         */
        const encodeRFC3986URIComponent = str => (
          encodeURIComponent(str)
            .replace(
              /[!'()*]/g,
              c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`
            )
        );
        /*
         * TODO: Fix URL and Tag regex
         */
        const posttypeRegExp = /^.+$/;
        const urlRegExp = /^.+$/;
        const tagRegExp = /^.+$/;

        const queryString = [...Object.entries(parameters)]
          .map(([key, value]) => {
            if (key === 'canonicalUrl') {
              if (!(value && urlRegExp.test(value))) {
                return null;
              }
            } else if (key === 'posttype') {
              if (!(value && posttypeRegExp.test(value))) {
                return null;
              }
            } else if (key === 'tags') {
              value = (Array.isArray(value) ? value : String(value).split(','))
                .filter(value => tagRegExp.test(value))
                .join(',');
              if (!value) {
                return null;
              }
            } else if (/^(?:title|content|caption)$/.test(key)) {
              if (!value) {
                return null;
              }
            } else if (key === 'showVia') {
              if (!value) {
                return null;
              }
              key = 'show-via';
            } else {
              return null;
            }
            return encodeRFC3986URIComponent(key) + '=' + encodeRFC3986URIComponent(value);
          })
          .filter(Boolean)
          .join('&');
        return 'http://tumblr.com/widgets/share/tool' + (queryString ? ('?' + queryString) : '');
      })({
        canonicalUrl: baseUrl,
        posttype: 'link',
        tags: [],
        title: title,
        content: '',
        caption: '',
        showVia: null,
      })
      data-locale="ja_JP"
    ) Tumblrに投稿
  - includeResources.push({src: 'https://assets.tumblr.com/share-button.js', id: 'tumblr-js', async: true});

  //- Pinterest
  //- https://developers.pinterest.com/tools/widget-builder/?type=pinit
  li.pinterest-share-button
    a(
      class="default-button-style"
      data-pin-do="buttonPin"
      href=(parameters => {
        /**
         * @see https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
         */
        const encodeRFC3986URIComponent = str => (
          encodeURIComponent(str)
            .replace(
              /[!'()*]/g,
              c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`
            )
        );
        /*
         * TODO: Fix URL regex
         */
        const urlRegExp = /^.+$/;

        const queryString = [...Object.entries(parameters)]
          .map(([key, value]) => {
            if (key === 'url') {
              if (!(value && urlRegExp.test(value))) {
                return null;
              }
            } else if (key === 'imageUrl') {
              if (!(value && urlRegExp.test(value))) {
                return null;
              }
              key = 'media';
            } else if (key === 'description') {
              if (!value) {
                return null;
              }
            } else {
              return null;
            }
            return encodeRFC3986URIComponent(key) + '=' + encodeRFC3986URIComponent(value);
          })
          .filter(Boolean)
          .join('&');
        return 'https://www.pinterest.com/pin/create/button/' + (queryString ? ('?' + queryString) : '');
      })({
        url: baseUrl,
        imageUrl: '',
        description: '',
      })
    ) Pinterestに保存
  - includeResources.push({src: '//assets.pinterest.com/js/pinit.js', async: true});

  //- LINE
  //- https://social-plugins.line.me/ja/how_to_install#lineitbutton
  li
    div(class="default-button-style line-it-button" data-lang="ja" data-type="share-a" data-url=baseUrl)
      a(
        href=(url => {
          /**
           * @see https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent
           */
          const encodeRFC3986URIComponent = str => (
            encodeURIComponent(str)
              .replace(
                /[!'()*]/g,
                c => `%${c.charCodeAt(0).toString(16).toUpperCase()}`
              )
          );
          return 'https://social-plugins.line.me/lineit/share?url=' + encodeRFC3986URIComponent(url);
        })(baseUrl)
      )
        | LINEで送る
  - includeResources.push({src: 'https://d.line-scdn.net/r/web/social-plugin/js/thirdparty/loader.min.js', async: true});
